{"ast":null,"code":"const addItem = [];\n\nconst addItems = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : addItem;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADDITEM\":\n      return [...state, action.payload];\n      break;\n\n    case \"DELITEM\":\n      return state = state.filter(x => {\n        return x.productId !== action.payload.productId;\n      });\n      break;\n\n    default:\n      return state;\n      break;\n  }\n};\n\nexport default addItems;","map":{"version":3,"names":["addItem","addItems","state","action","type","payload","filter","x","productId"],"sources":["D:/finalLenskart/lenskart/src/redux/reducers/addItem.js"],"sourcesContent":["const addItem = [];\r\nconst addItems = (state = addItem, action) => {\r\n  switch (action.type) {\r\n    case \"ADDITEM\":\r\n      return [...state, action.payload];\r\n      break;\r\n\r\n    case \"DELITEM\":\r\n      return (state = state.filter((x) => {\r\n        return x.productId !== action.payload.productId;\r\n      }));\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n\r\nexport default addItems;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,EAAhB;;AACA,MAAMC,QAAQ,GAAG,YAA6B;EAAA,IAA5BC,KAA4B,uEAApBF,OAAoB;EAAA,IAAXG,MAAW;;EAC5C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,SAAL;MACE,OAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;MACA;;IAEF,KAAK,SAAL;MACE,OAAQH,KAAK,GAAGA,KAAK,CAACI,MAAN,CAAcC,CAAD,IAAO;QAClC,OAAOA,CAAC,CAACC,SAAF,KAAgBL,MAAM,CAACE,OAAP,CAAeG,SAAtC;MACD,CAFe,CAAhB;MAGA;;IAEF;MACE,OAAON,KAAP;MACA;EAbJ;AAeD,CAhBD;;AAkBA,eAAeD,QAAf"},"metadata":{},"sourceType":"module"}